stages: 
  - build_image

build_image:
  tags:
    - ENABLE
  stage: build_image

  only:
    - sg200x

  script:
    # - export
    # 
    # install tools

    # sudo apt update
    # sudo apt install -y pkg-config build-essential ninja-build automake autoconf libtool wget curl git gcc libssl-dev bc \ 
    #  slib squashfs-tools android-sdk-libsparse-utils jq python3-distutils scons parallel tree python3-dev python3-pip \
    #  device-tree-compiler ssh cpio fakeroot libncurses5 flex bison libncurses5-dev genext2fs rsync unzip dosfstools \
    #  mtools tcl openssh-client cmake expect

    # wget https://sophon-file.sophon.cn/sophon-prod-s3/drive/23/03/07/16/host-tools.tar.gz
    # tar xf host-tools.tar.gz && rm host-tools.tar.gz
    - |
      if [ ! -d "host-tools/" ];then
      git clone ${TOOL_GIT_URL}
      fi

    # build
    - now="`date +%Y%m%d`"
    - |
      source build/cvisetup.sh <<EOF
       "${PASSWORD}"
      EOF

    # 编译sg2000_lubancat_riscv_ubuntu_sd镜像
    - defconfig sg2000_lubancat_riscv_ubuntu_sd
    - build_all

    # 编译sg2000_lubancat_riscv_ubuntu_emmc镜像
    - defconfig sg2000_lubancat_riscv_ubuntu_emmc
    - build_all

    # 编译sg2000_lubancat_arm64_ubuntu_sd镜像 
    - defconfig sg2000_lubancat_arm64_ubuntu_sd
    - build_all

    # 编译sg2000_lubancat_arm64_ubuntu_emmc镜像
    - defconfig sg2000_lubancat_arm64_ubuntu_emmc
    - build_all

    # 部署
    - mkdir -p ${NAS_URL}/${now}/Ubuntu
    - cp install/soc_sg2000_lubancat_riscv_ubuntu_sd/images/*.img ${NAS_URL}/${now}/Ubuntu
    - cp install/soc_sg2000_lubancat_riscv_ubuntu_emmc/*.zip ${NAS_URL}/${now}/Ubuntu
    - cp install/soc_sg2000_lubancat_arm64_ubuntu_sd/images/*.img ${NAS_URL}/${now}/Ubuntu
    - cp install/soc_sg2000_lubancat_arm64_ubuntu_emmc/*.zip ${NAS_URL}/${now}/Ubuntu

  when: delayed
  start_in: 180 minutes
